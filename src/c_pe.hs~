-- Joe Jevnik
-- Date: 20.8.2013
-- Utilities for working on Project Euler problems in c/c++.
module C_Pe
    ( check_status
    , open_problem
    , mark_complete
    , mark_incomplete
    , wrap_imports
    , unwrap_imports
    ) where

import System.IO
import System.Process
import System.Directory
import Data.List
import Data.Maybe
import Control.Monad
import Control.Applicative
import Problem_Wrapper

-- open_problem but for c/c++ problems.
open_problem :: Int -> IO ()
open_problem p = do
     s <- check_status p
    if s `elem` ["Complete","Incomplete"] 
    then (system $ "emacs Problems/Problem_" ++ show p ++ ".hs &") >> return ()
    else do
        putStrLn "Problem has not been started, Would you like to start it (y/n)"
        inp <- getLine
        when (inp == "y") $ (system ("echo \"" ++ problem_template p 
                                    ++ "\" > Problems/Problem_" 
                                    ++ show p ++ ".hs")) 
                 >> (system $ "emacs C_Problems/Problem_" 
                                ++ show p ++ ". &") 
                 >> appendFile "C_Problems/.incomplete" (show p)
    where
        problem_template n = "-- NOT YET COMPLETED.\n#include <stdlib.h>\n\n" 
                             ++ "int main(){"
